// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName String
  lastName  String
  email     String @unique
  hash      String

  history AnalysisResult[]
}

model AnalysisResult {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  scores Score[]
  userId String
  user   User    @relation(references: [id], fields: [userId])
}

model Algorithm {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  unit    String
  min     Float
  max     Float
  formula String

  variables AlgorithmVariable[]
  scores    Score[]
  scales    AlgorithmScale[]
}

model Score {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value     Float
  dificulty String?

  algorithmId      String
  algorithm        Algorithm      @relation(references: [id], fields: [algorithmId])
  analysisResultId String
  analysisResult   AnalysisResult @relation(references: [id], fields: [analysisResultId])
}

model AlgorithmScale {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  upperLimit Float
  level      String
  extra      Json?

  algorithmId String
  algorithm   Algorithm @relation(references: [id], fields: [algorithmId])
}

model Variable {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  algorithms AlgorithmVariable[]
}

model AlgorithmVariable {
  algorithmId String
  algorithm   Algorithm @relation(references: [id], fields: [algorithmId])

  variableId String
  variable   Variable @relation(references: [id], fields: [variableId])

  @@id([algorithmId, variableId])
}
